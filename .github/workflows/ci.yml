name: CI Pipeline

on:
  pull_request:
    branches:
      - main
    paths:
      - 'web-app/**'
      - 'microservices/ServicioSistema/**'
      - 'microservices/ServicioUsuario/**'
      - 'microservices/ServicioIncidente/**'

  push:
    branches:
      - main
    paths:
      - 'web-app/**'
      - 'microservices/ServicioSistema/**'
      - 'microservices/ServicioUsuario/**'
      - 'microservices/ServicioIncidente/**'

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      web_app_changed: ${{ steps.filter.outputs.web_app }}
      servicio_sistema_changed: ${{ steps.filter.outputs.servicio_sistema }}
      servicio_usuario_changed: ${{ steps.filter.outputs.servicio_usuario }}
      servicio_incidente_changed: ${{ steps.filter.outputs.servicio_incidente }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine changed files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            web_app:
              - 'web-app/**'
            servicio_sistema:
              - 'microservices/ServicioSistema/**'
            servicio_usuario:
              - 'microservices/ServicioUsuario/**'
            servicio_incidente:
              - 'microservices/ServicioIncidente/**'
            

  test-web-app:
    if: needs.determine-changes.outputs.web_app_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    needs: [determine-changes]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./web-app
        run: npm install

      - name: Run Unit Tests for web-app
        working-directory: ./web-app
        run: npm run test -- --coverage

      - name: Run SonarCloud Scan for web-app
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test-and-deploy-servicio-sistema:
    if: needs.determine-changes.outputs.servicio_sistema_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    needs: [determine-changes]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Testing for Servi cioSistema
      - name: Install dependencies for ServicioSistema
        working-directory: ./microservices/ServicioSistema
        run: pip install -r requirements.txt

      - name: Run tests for ServicioSistema
        working-directory: ./microservices/ServicioSistema
        run: |
          pytest --cov=. --cov-config=.coveragerc --cov-report=xml --cov-report=term -v -s --cov-fail-under=90          

      - name: Run SonarCloud Scan for ServicioSistema
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=rnhdev
            -Dsonar.projectKey=rnhdev_TestSonarServicioSistema
            -Dsonar.projectBaseDir=microservices/ServicioSistema
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     
  test-and-deploy-servicio-usuario:
    if: needs.determine-changes.outputs.servicio_usuario_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    needs: [determine-changes]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Testing for Servi cioUsuario
      - name: Install dependencies for ServicioUsuario
        working-directory: ./microservices/ServicioUsuario
        run: pip install -r requirements.txt

      - name: Run tests for ServicioUsuario
        working-directory: ./microservices/ServicioUsuario
        run: |
          pytest --cov=. --cov-config=.coveragerc --cov-report=xml --cov-report=term -v -s --cov-fail-under=90          

      - name: Run SonarCloud Scan for ServicioUsuario
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=rnhdev
            -Dsonar.projectKey=rnhdev_TestSonarServicioUsuario
            -Dsonar.projectBaseDir=microservices/ServicioUsuario
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     
  test-and-deploy-servicio-incidente:
    if: needs.determine-changes.outputs.servicio_incidente_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    needs: [determine-changes]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Testing for Servi cioIncidente
      - name: Install dependencies for ServicioIncidente
        working-directory: ./microservices/ServicioIncidente
        run: pip install -r requirements.txt

      - name: Run tests for ServicioIncidente
        working-directory: ./microservices/ServicioIncidente
        run: |
          pytest --cov=. --cov-config=.coveragerc --cov-report=xml --cov-report=term -v -s --cov-fail-under=30          

      - name: Run SonarCloud Scan for ServicioIncidente
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=rnhdev
            -Dsonar.projectKey=rnhdev_TestSonarServicioIncidente
            -Dsonar.projectBaseDir=microservices/ServicioIncidente
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
